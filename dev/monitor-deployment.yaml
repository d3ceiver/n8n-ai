apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-monitor
  namespace: ai
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n-monitor
  template:
    metadata:
      labels:
        app: n8n-monitor
    spec:
      containers:
        - name: n8n-monitor
          image: curlimages/curl:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              LOG_FILE="/tmp/n8n-monitor.log"
              WEBHOOK_BOOT="http://192.168.0.59:32000/webhook/pi-boot"
              WEBHOOK_RECOVERED="http://192.168.0.59:32000/webhook/n8n-recovered"
              CHECK_URL="http://192.168.0.59:32000/"

              echo "$(date): n8n monitor pod started." | tee -a $LOG_FILE

              # Wait until n8n is reachable
              until curl -fs "$CHECK_URL" > /dev/null 2>&1; do
                echo "$(date): Waiting for n8n to become available..." | tee -a $LOG_FILE
                sleep 10
              done

              echo "$(date): n8n is now UP → sending boot webhook..." | tee -a $LOG_FILE

              # Keep retrying boot webhook until success
              while true; do
                if curl -fs -X POST "$WEBHOOK_BOOT" > /dev/null 2>&1; then
                  echo "$(date): Boot webhook sent successfully!" | tee -a $LOG_FILE
                  break
                else
                  echo "$(date): Boot webhook not ready yet (retrying in 10s)..." | tee -a $LOG_FILE
                  sleep 10
                fi
              done

              STATE="up"

              # Continuous monitor loop
              while true; do
                if curl -fs "$CHECK_URL" > /dev/null 2>&1; then
                  if [ "$STATE" = "down" ]; then
                    echo "$(date): n8n recovered → sending webhook" | tee -a $LOG_FILE
                    if curl -fs -X POST "$WEBHOOK_RECOVERED" > /dev/null 2>&1; then
                      echo "$(date): Recovery webhook sent successfully!" | tee -a $LOG_FILE
                      STATE="up"
                    fi
                  fi
                else
                  if [ "$STATE" = "up" ]; then
                    echo "$(date): n8n appears down" | tee -a $LOG_FILE
                    STATE="down"
                  fi
                fi
                sleep 30
              done
          resources:
            requests:
              cpu: 50m
              memory: 32Mi
            limits:
              cpu: 100m
              memory: 64Mi
