apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-monitor-guardian
  namespace: ai
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n-monitor-guardian
  template:
    metadata:
      labels:
        app: n8n-monitor-guardian
    spec:
      serviceAccountName: default  # or your custom guardian SA
      hostNetwork: true
      containers:
        - name: guardian
          image: alpine:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "$(date -u '+%Y-%m-%d %H:%M:%S UTC'): Passive Guardian started (host network mode).";
              while true; do
                # Listen for incoming heartbeats
                nc -l -p 9999 -w 60 >/dev/null && LAST_HEARTBEAT=$(date +%s);

                CURRENT_TIME=$(date +%s);
                TIME_DIFF=$((CURRENT_TIME - LAST_HEARTBEAT));

                # Get monitor pod name
                MONITOR_POD=$(kubectl -n ai get pod -l app=n8n-monitor -o jsonpath='{.items[0].metadata.name}' 2>/dev/null)

                if [ -z "$MONITOR_POD" ]; then
                  echo "$(date -u '+%Y-%m-%d %H:%M:%S UTC'): ⚠️ Monitor pod not found.";
                elif [ $TIME_DIFF -gt 60 ]; then
                  echo "$(date -u '+%Y-%m-%d %H:%M:%S UTC'): ❌ No heartbeat for ${TIME_DIFF}s, restarting monitor pod ($MONITOR_POD).";
                  kubectl -n ai delete pod "$MONITOR_POD" --force --grace-period=0;
                  LAST_HEARTBEAT=$(date +%s);
                fi;
                sleep 10;
              done;
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          ports:
            - containerPort: 9999
              hostPort: 9999

